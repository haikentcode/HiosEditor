/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package hioseditor;

/**
 * System Programing Lab Project
 * CSE #3rd Year(6th Sem )
 * Submitted By Hitesh Kumar Regar (12103024) 
 * @author Haiketn
 */
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.io.*;
public class Gui extends javax.swing.JFrame {

    /**
     * Creates new form Gui
     */
    public Gui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabpane = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        _new = new javax.swing.JMenuItem();
        _open = new javax.swing.JMenuItem();
        _save = new javax.swing.JMenuItem();
        _saveas = new javax.swing.JMenuItem();
        _close = new javax.swing.JMenuItem();
        _closeall = new javax.swing.JMenuItem();
        _rename = new javax.swing.JMenuItem();
        _exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        _undo = new javax.swing.JMenuItem();
        _redo = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        _cut = new javax.swing.JMenuItem();
        _copy = new javax.swing.JMenuItem();
        _paste = new javax.swing.JMenuItem();
        _delete = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        _find = new javax.swing.JMenuItem();
        _replace = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        _fontsizeinc = new javax.swing.JMenuItem();
        _fontsizedec = new javax.swing.JMenuItem();
        _txtcolor = new javax.swing.JMenuItem();
        _style = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("File");

        _new.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        _new.setText("New");
        _new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _newActionPerformed(evt);
            }
        });
        jMenu1.add(_new);

        _open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        _open.setText("Open");
        _open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _openActionPerformed(evt);
            }
        });
        jMenu1.add(_open);

        _save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        _save.setText("Save");
        _save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _saveActionPerformed(evt);
            }
        });
        jMenu1.add(_save);

        _saveas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        _saveas.setText("Save As");
        _saveas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _saveasActionPerformed(evt);
            }
        });
        jMenu1.add(_saveas);

        _close.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        _close.setText("Close");
        _close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _closeActionPerformed(evt);
            }
        });
        jMenu1.add(_close);

        _closeall.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        _closeall.setText("Close All");
        _closeall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _closeallActionPerformed(evt);
            }
        });
        jMenu1.add(_closeall);

        _rename.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        _rename.setText("Rename");
        _rename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _renameActionPerformed(evt);
            }
        });
        jMenu1.add(_rename);

        _exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        _exit.setText("Exit");
        _exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _exitActionPerformed(evt);
            }
        });
        jMenu1.add(_exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        _undo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        _undo.setText("Undo");
        _undo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _undoActionPerformed(evt);
            }
        });
        jMenu2.add(_undo);

        _redo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        _redo.setText("Redo");
        _redo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _redoActionPerformed(evt);
            }
        });
        jMenu2.add(_redo);
        jMenu2.add(jSeparator2);

        _cut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        _cut.setText("Cut");
        _cut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _cutActionPerformed(evt);
            }
        });
        jMenu2.add(_cut);

        _copy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        _copy.setText("Copy");
        _copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _copyActionPerformed(evt);
            }
        });
        jMenu2.add(_copy);

        _paste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        _paste.setText("Paste");
        _paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _pasteActionPerformed(evt);
            }
        });
        jMenu2.add(_paste);

        _delete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        _delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hioseditor/no.png"))); // NOI18N
        _delete.setText("Delete");
        _delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _deleteActionPerformed(evt);
            }
        });
        jMenu2.add(_delete);
        jMenu2.add(jSeparator3);

        _find.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        _find.setText("Find");
        _find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _findActionPerformed(evt);
            }
        });
        jMenu2.add(_find);

        _replace.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        _replace.setText("Replace");
        _replace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _replaceActionPerformed(evt);
            }
        });
        jMenu2.add(_replace);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("View");

        _fontsizeinc.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        _fontsizeinc.setText("Fontsize +");
        _fontsizeinc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _fontsizeincActionPerformed(evt);
            }
        });
        jMenu3.add(_fontsizeinc);

        _fontsizedec.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_J, java.awt.event.InputEvent.CTRL_MASK));
        _fontsizedec.setText("Fontsize -");
        _fontsizedec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _fontsizedecActionPerformed(evt);
            }
        });
        jMenu3.add(_fontsizedec);

        _txtcolor.setText("Text Color");
        _txtcolor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _txtcolorActionPerformed(evt);
            }
        });
        jMenu3.add(_txtcolor);

        _style.setText("Style");
        _style.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _styleActionPerformed(evt);
            }
        });
        jMenu3.add(_style);
        jMenu3.add(jSeparator1);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabpane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabpane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void _openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__openActionPerformed
        // TODO add your handling code here:
        
        
        
        
 	  	try{
 	  	
 	        JFileChooser filechoser=new JFileChooser();
 	     	int rt=filechoser.showOpenDialog(this);
   	  	
   	  	      if(rt==JFileChooser.APPROVE_OPTION)
   	  	        {
   	  	            File file;
   	  	 	   file=filechoser.getSelectedFile();
   	  	           String fname=file.getAbsolutePath();
   	  	           JPanel p=new JPanel();
                           p.setLayout(new BorderLayout());
                           //JScrollPane jsp=new JScrollPane();
                          JTextArea txt=new JTextArea();
 	  	          p.add(txt,BorderLayout.CENTER);
                          // p.add(jsp,BorderLayout.CENTER);
                          tabpane.add(p,fname);
                          txt.setText(readFile(file));
                          tabpane.setSelectedComponent(p);
 	  	          tabpane.setSelectedComponent(p);
 	  	           
 	  	           p.add(txt);
   	  	 	
   	  	        }
   	  	        
   	  	 
 	  	}catch(Exception e)
 	  	{
 	  		System.out.println(e);
 	  	}
    }//GEN-LAST:event__openActionPerformed

    private void _copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__copyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event__copyActionPerformed

    private void _newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__newActionPerformed
         // TODO add your handling code here:
                 
                 JPanel p=new JPanel();
                 p.setLayout(new BorderLayout());
                 //JScrollPane jsp=new JScrollPane();
                 JTextArea txt=new JTextArea();
 	  	         p.add(txt,BorderLayout.CENTER);
                // p.add(jsp,BorderLayout.CENTER);
                 tabpane.add(p,"New");
                 tabpane.setSelectedComponent(p);
                 
                
    }//GEN-LAST:event__newActionPerformed

    private void _saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__saveActionPerformed
        // TODO add your handling code here:
        
      _save();
    }//GEN-LAST:event__saveActionPerformed

    private void _saveasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__saveasActionPerformed
        // TODO add your handling code here:
        int c=tabpane.countComponents();
           if(c>=1){
                     JFileChooser jf=new JFileChooser();
 	                 int us=jf.showSaveDialog(this);
                     int ind=tabpane.getSelectedIndex();
 	          if(us==JFileChooser.APPROVE_OPTION)
 	  	         {
 	  		   File savefile=jf.getSelectedFile();
 	  		   try{
 	  			    savefile.createNewFile();
 	  			    FileWriter fw=new FileWriter(savefile.getAbsoluteFile());
 	  			    BufferedWriter bw=new BufferedWriter(fw);
 	  		        JPanel jp=(JPanel)tabpane.getComponent(ind);
 	  			    JTextArea t=(JTextArea)jp.getComponent(0);
 	  			    bw.write(t.getText());
 	  			    System.out.println(savefile.getName());
 	  			    tabpane.setTitleAt(ind,savefile.getAbsolutePath());
 	  			   bw.close();
 	  		    }catch(IOException e){}
 	               }
           }
        
    }//GEN-LAST:event__saveasActionPerformed

    private void _closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__closeActionPerformed
        // TODO add your handling code here:
        int c=tabpane.countComponents();
        int ind=tabpane.getSelectedIndex();
        JPanel jp=(JPanel)tabpane.getComponent(ind);
        JTextArea t=(JTextArea)jp.getComponent(0);
        String boxtext=t.getText();
        
        String p=tabpane.getTitleAt(ind);
        if(!p.equals("New"))
        {
            File file=new File(p);
           String filetxt=readFile(file);
          if(filetxt.equals(boxtext))
           {
               tabpane.remove(jp);
            }
            else
             {
                int r=0;
                int k=JOptionPane.showConfirmDialog (null, "Would You Like to Save your Previous Note First?","Warning",r);
                
                if(k==1) //no
                   {
                      tabpane.remove(jp);
                   }
                else //yes
                {
                    _save();
                    tabpane.remove(jp);
                }
                
              }
        }
        else
             {
                int r=0;
                int k=JOptionPane.showConfirmDialog (null, "Would You Like to Save your Previous Note First?","Warning",r);
               
                if(k==1) //no
                   {
                      tabpane.remove(jp);
                   }
                else //yes
                {
                    _save();
                    tabpane.remove(jp);
                }
              }
        
        
    }//GEN-LAST:event__closeActionPerformed

    private void _closeallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__closeallActionPerformed
        // TODO add your handling code here:
        
       
        
        
    }//GEN-LAST:event__closeallActionPerformed

    private void _renameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__renameActionPerformed
        // TODO add your handling code here:
        String input = JOptionPane.showInputDialog(this  ,"new Name of file");
        int ind=tabpane.getSelectedIndex();
        String oldfile=tabpane.getTitleAt(ind);
        
        
     File file = new File(oldfile); //oldfile
     
     String fn=file.getName();
     String newfile=file.getAbsolutePath().replace(fn,input);
     System.out.print(fn);
     File file2 = new File(newfile); //newfile
    
     if(file2.exists()) 
     {
       //already exist
     }
     else
     {
         // Rename file (or directory)
            boolean success = file.renameTo(file2);
            
            
           if (!success) {
                   
                       }else {tabpane.setTitleAt(ind,file2.getAbsolutePath());}
    }
        
        
    }//GEN-LAST:event__renameActionPerformed

    private void _exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__exitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event__exitActionPerformed

    private void _undoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__undoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event__undoActionPerformed

    private void _redoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__redoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event__redoActionPerformed

    private void _cutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__cutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event__cutActionPerformed

    private void _pasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__pasteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event__pasteActionPerformed

    private void _deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__deleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event__deleteActionPerformed

    private void _findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__findActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event__findActionPerformed

    private void _replaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__replaceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event__replaceActionPerformed

    private void _fontsizeincActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__fontsizeincActionPerformed
        // TODO add your handling code here:
        
        int ind=tabpane.getSelectedIndex();
        JPanel jp=(JPanel)tabpane.getComponent(ind);
        JTextArea t=(JTextArea)jp.getComponent(0);
        int fs=t.getFont().getSize()+1;
        if(fs<=100)t.setFont(new Font("Serif", Font.BOLD, fs));
    }//GEN-LAST:event__fontsizeincActionPerformed

    private void _txtcolorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__txtcolorActionPerformed
        // TODO add your handling code here:
        
        int ind=tabpane.getSelectedIndex();
        JPanel jp=(JPanel)tabpane.getComponent(ind);
        JTextArea t=(JTextArea)jp.getComponent(0);
        Color initialcolor=t.getCaretColor();  
        Color color=JColorChooser.showDialog(this,"Select a color",initialcolor); 
        t.setForeground(color);
      
    }//GEN-LAST:event__txtcolorActionPerformed

    private void _styleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__styleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event__styleActionPerformed

    private void _fontsizedecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__fontsizedecActionPerformed
        // TODO add your handling code here:
        
        int ind=tabpane.getSelectedIndex();
        JPanel jp=(JPanel)tabpane.getComponent(ind);
        JTextArea t=(JTextArea)jp.getComponent(0);
        int fs=t.getFont().getSize()-1;
        if(fs>=1)t.setFont(new Font("Serif", Font.BOLD, fs));
    }//GEN-LAST:event__fontsizedecActionPerformed

    
    void _save()
    {
        
        int c=tabpane.countComponents();
           if(c>=1){  
        try{
 	  	
 	  	int ind=tabpane.getSelectedIndex();
 	   if(tabpane.getTitleAt(ind).equals("New"))
               {
                     JFileChooser jf=new JFileChooser();
 	             int us=jf.showSaveDialog(this);
 	             
 	  	
 	  	
 	  	     if(us==JFileChooser.APPROVE_OPTION)
 	  	         {
 	  		   File savefile=jf.getSelectedFile();
 	  		   try{
 	  			savefile.createNewFile();
 	  			FileWriter fw=new FileWriter(savefile.getAbsoluteFile());
 	  			BufferedWriter bw=new BufferedWriter(fw);
 	  		
 	  			JPanel jp=(JPanel)tabpane.getComponent(ind);
 	  			JTextArea t=(JTextArea)jp.getComponent(0);
 	  			bw.write(t.getText());
 	  			System.out.println(savefile.getName());
 	  			tabpane.setTitleAt(ind,savefile.getAbsolutePath());
 	  			bw.close();
 	  		    }catch(IOException e){}
 	               }
 	       }
 	   
 	     else
 	     	{
 	     	
 	     		
 	     	  String s=tabpane.getTitleAt(ind);
 	     	  File f=new File(s);
 	     	  FileWriter fw=new FileWriter(f.getAbsoluteFile());
 	  	  BufferedWriter bw=new BufferedWriter(fw);
 	  	  String t=((JTextArea)((JPanel)tabpane.getComponent(ind)).getComponent(0)).getText();
 	  	  bw.write(t);
 	  	  bw.close();
 	     	
 	     	  
 	        }
 	        
 	      }catch(IOException e){}
        
           }
    }
    
    String readFile(File file)
 	{
 	   
 	   String c=null;
 	   try{
 	   	
 	   	  FileReader reader=new FileReader(file);
 	   	  char[] chars=new char[(int)file.length()];
 	   	  reader.read(chars);
 	   	  c=new String(chars);
 	   	  reader.close();
 	   	
 	   }catch(IOException e)
 	   {
 	   	  c=new String("Error to read FIle!!");
 	   }	
 	   	return c;
 	}
    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem _close;
    private javax.swing.JMenuItem _closeall;
    private javax.swing.JMenuItem _copy;
    private javax.swing.JMenuItem _cut;
    private javax.swing.JMenuItem _delete;
    private javax.swing.JMenuItem _exit;
    private javax.swing.JMenuItem _find;
    private javax.swing.JMenuItem _fontsizedec;
    private javax.swing.JMenuItem _fontsizeinc;
    private javax.swing.JMenuItem _new;
    private javax.swing.JMenuItem _open;
    private javax.swing.JMenuItem _paste;
    private javax.swing.JMenuItem _redo;
    private javax.swing.JMenuItem _rename;
    private javax.swing.JMenuItem _replace;
    private javax.swing.JMenuItem _save;
    private javax.swing.JMenuItem _saveas;
    private javax.swing.JMenuItem _style;
    private javax.swing.JMenuItem _txtcolor;
    private javax.swing.JMenuItem _undo;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JTabbedPane tabpane;
    // End of variables declaration//GEN-END:variables
}
